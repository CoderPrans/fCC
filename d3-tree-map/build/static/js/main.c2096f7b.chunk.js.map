{"version":3,"sources":["logo.svg","colors.js","App.js","reportWebVitals.js","index.js"],"names":["colors","Plot","data","root","d3","sum","d","value","categories","children","map","name","useEffect","tooltip","on","attr","target","dataset","html","category","style","screenY","screenX","id","width","height","transform","size","padding","console","log","leaves","l","className","x","x0","y","y0","x1","y1","stroke","data-name","data-category","data-value","fill","split","v","i","fontSize","position","opacity","zIndex","slice","c","fetchData","url","fetch","then","res","json","catch","err","App","useState","setData","setUrl","baseUrl","links","a","length","response","flexDirection","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2096f7b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","let colors = {\n  \"Action\": \"seagreen\",\n\n  \"Drama\": \"mediumpurple\",\n\n  \"Adventure\": \"maroon\",\n\n  \"Family\": \"red\",\n\n  \"Animation\": \"hotpink\",\n\n  \"Comedy\": \"purple\",\n\n  \"Biography\": \"fuchsia\",\n\n  \"Product Design\": \"mediumpurple\",\n\n  \"Tabletop Games\": \"seagreen\",\n\n  \"Gaming Hardware\": \"maroon\",\n\n  \"Video Games\": \"red\",\n\n  \"Sound\": \"purple\",\n\n  \"Television\": \"fuchsia\",\n\n  \"Narrative Film\": \"green\",\n\n  \"Web\": \"lime\",\n\n  \"Hardware\": \"olive\",\n\n  \"Games\": \"gray\",\n\n  \"3D Printing\": \"navy\",\n\n  \"Technology\": \"blue\",\n\n  \"Wearables\": \"teal\",\n\n  \"Sculpture\": \"yellowgreen\",\n\n  \"Apparel\": \"orange\",\n\n  \"Food\": \"lightseagreen\",\n\n  \"Art\": \"dodgerblue\",\n\n  \"Gadgets\": \"tomato\",\n\n  \"Drinks\": \"rebeccapurple\",\n\n  \"2600\": \"blueviolet\",\n\n  \"Wii\": \"brown\",\n\n  \"NES\": \"burlywood\",\n\n  \"GB\": \"cadetblue\",\n\n  \"DS\": \"chocolate\",\n\n  \"X360\": \"coral\",\n\n  \"PS3\": \"cornflowerblue\",\n\n  \"PS2\": \"tan\",\n\n  \"SNES\": \"crimson\",\n\n  \"GBA\": \"steelblue\",\n\n  \"PS4\": \"darkblue\",\n\n  \"3DS\": \"darkcyan\",\n\n  \"N64\": \"darkgoldenrod\",\n\n  \"PS\": \"darkgray\",\n\n  \"XB\": \"darkkhaki\",\n\n  \"PC\": \"darkmagenta\",\n\n  \"PSP\": \"darkolivegreen\",\n\n  \"XOne\": \"darkorange\"\n}\n\n\nexport default colors\n","import logo from './logo.svg';\nimport {useState, useEffect} from 'react';\nimport './App.css';\nimport * as d3 from 'd3';\nimport colors from './colors'\n\nfunction Plot({data}) {\n    let width = 1060;\n    let height = 570;\n    let root = d3.hierarchy(data).sum(d => d.value);\n    let categories = data.children.map(d => d.name);\n    useEffect(() => {\n\tlet tooltip = d3.select('#tooltip')\n\t   d3.selectAll('.tile')\n\t   .on('mouseover', d => {\n\t       tooltip\n\t\t   .attr('data-value', d.target.dataset.value)\n\t\t   .html(`${d.target.dataset.name}<br/>${d.target.dataset.category}<br/>${d.target.dataset.value}`)\n\t\t   .style('top', d.screenY - 10 + 'px')\n\t\t   .style('left', d.screenX + 10 + 'px')\n\t\t   .style('background', '#f5f9cd')\n\t\t   .style('line-height', '1.5')\n\t\t   .style('border-radius', '5px')\n\t\t   .style('opacity', 0.9)\n\t\t   .style('font-size', '13px')\n\t\t   .style('padding', '15px')\n\n\t   }).on('mouseout', () => {tooltip.style('opacity', 0)});\n    }, [])\n  return (\n    <div>\n      <h1 id=\"title\">Tree Map</h1>\n      <h3 id=\"description\">{data.name}</h3>\n      <svg width={width} height={height}>\n        <g transform=\"translate(0,0)\">\n          {d3\n            .treemap()\n            .size([width, height])\n            .padding(2)(root) && (\n            <>\n\t\t    {console.log(root.leaves())}\n\t\t{console.log(data)}\n              {root.leaves().map(l => {\n                if (l.data.name) {\n                  return (\n                    <>\n                      <rect\n\t\t        className=\"tile\"\n\t\t        key={l.value}\n                        x={l.x0}\n                        y={l.y0}\n                        width={l.x1 - l.x0}\n                        height={l.y1 - l.y0}\n                      stroke={colors[l.data.category]}\n\t\t      data-name={l.data.name}\n\t\t      data-category={l.data.category}\n\t\t      data-value={l.value}\n                        style={{\n                          fill: colors[l.data.category],\n                        }}>\n                        {l.data.category}\n                        {l.data.name}\n                      </rect>\n                      <text>\n                        {l.data.name.split(/(?=[A-Z][^A-Z])/g).map((v, i) => (\n                          <tspan\n                            x={l.x0 + 5}\n                            y={l.y0 + 15 + i * 10}\n\t\t\t    key={`${v}-${i}`}\n\t\t\t    fontSize=\"0.6em\"\n                            fill=\"white\">\n                            {v}\n                          </tspan>\n                        ))}\n                      </text>\n                    </>)}})}\n\t\t</>)\n\n\t  }\n      </g></svg>\n\t<div id=\"tooltip\"\n      style={{position: 'absolute', opacity: 0, zIndex: 10}}></div>\n\n\t  <svg id=\"legend\" width=\"750\" height=\"700\">\n\t  {categories.slice(0).map((c, i) => (\n\t\t  <>\n\t\t  <rect\n\t      className=\"legend-item\"\n\t      width=\"20\"\n\t      height=\"20\"\n\t      x={i<5?30:(i<10?230:(i<15?430:630))}\n\t      y={i<5?(i+1)*30:(i<10?(i-4)*30:(i<15?(i-9)*30:(i-14)*30))}\n\t      style={{\n\t\t  fill: colors[c]\n\t      }}>\n\t\t  </rect>\n\t\t  <text\n\t      x={i<5?60:(i<10?260:(i<15?460:660))}\n\t      y={i<5?(i+1.5)*30:(i<10?(i-3.5)*30:(i<15?(i-8.5)*30:(i-13.5)*30))}\n\t\t  >{c}</text>\n\t      </>\n\t  ))}\n      </svg>\n      </div>)}\n\nfunction fetchData(url) {\n  return fetch(url)\n    .then(res => res.json().then(data => data))\n    .catch(err => console.log(err));\n}\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [url, setUrl] = useState('https://cdn.freecodecamp.org/testable-projects-fcc/data/tree_map/movie-data.json');\n\n  const baseUrl =\n    'https://cdn.freecodecamp.org/testable-projects-fcc/data/tree_map';\n  const links = {\n    movie: 'movie-data.json',\n    kickstarter: 'kickstarter-funding-data.json',\n    games: 'video-game-sales-data.json',\n  };\n\n  useEffect(() => {\n    (async function() {\n      setData(null);\n      if (url.length) {\n        const response = await fetchData(url);\n        setData(response);\n      }\n    })();\n  }, [url]);\n\n  return (\n    <div className=\"App\">\n      <header\n        style={{\n          flexDirection: 'row',\n        }}\n        className=\"App-header\">\n        <button onClick={() => setUrl(`${baseUrl}/${links.movie}`)}>\n          Movie Data\n        </button>\n        <button onClick={() => setUrl(`${baseUrl}/${links.kickstarter}`)}>\n          Kickstarter Data\n        </button>\n        <button onClick={() => setUrl(`${baseUrl}/${links.games}`)}>\n          Video Game Data\n        </button>\n      </header>\n      {data && <Plot data={data} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}